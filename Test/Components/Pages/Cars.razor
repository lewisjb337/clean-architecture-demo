@page "/cars"

@using Demo.WebUI.Extensions
@using Test.Components.Pages.Modals.Cars;
@using Test.Components.Pages.Modules;
@rendermode InteractiveServer

<PageTitle>Cars</PageTitle>

<AddCarModal @ref="AddModal" OnModalClosed="RefreshMe" />
<UpdateCarModal @ref="UpdateModal" OnModalClosed="RefreshMe" />
<DeleteCarModal @ref="DeleteModal" OnModalClosed="RefreshMe" />

<div class="d-flex">
    <input class="form-control w-25" type="search" @bind="_searchText" @bind:event="oninput" placeholder="Search" aria-label="Search">
    <button class="btn btn-primary mx-2" @onclick="async () => await AddModal.Open()">Add New</button>
</div>

<LoadAsyncData Data="LoadData">
    <BodyContent>
        <table class="table my-3">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Make</th>
                    <th>Model</th>
                    <th>Year</th>
                    <th>Registration</th>
                    <th>Mileage</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
            @if (CarsList is not null && CarsList.Any())
            {
                @foreach (var car in CarsList.Filter(_searchText, x => x.Make))
                {
                    <tr>
                        <td>@car.Id</td>
                        <td>@car.Make</td>
                        <td>@car.Model</td>
                        <td>@car.Year</td>
                        <td>@car.Registration</td>
                        <td>@car.Mileage</td>
                        <td>
                            <button class="border-0 bg-transparent mx-1" @onclick="@(async () => await UpdateModal.Open(car.Id))">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                    <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                                </svg>
                            </button>
                        </td>
                        <td>
                            <button class="border-0 bg-transparent mx-1" @onclick="@(async () => await DeleteModal.Open(car.Id))">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                                    <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z" />
                                </svg>
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <div class="alert alert-warning" role="alert">
                    <i class="fa-solid fa-triangle-exclamation" style="margin-right: 1rem;"></i>There is currently <b>no car data currently available</b>, check back again later or <b>add new data</b> using the button above.
                </div>
            }
        </table>
    </BodyContent>
</LoadAsyncData>